import (
	"global.api"
)
@server(
	prefix: /node
)

service master-api{
	@handler RegisterNode
	post /register(RegisterRequest)
	
	@handler ListNode
	get /list(NodeListRequest) returns (NodeListResponse)
	
	// NodeTop run command top
	@handler NodeTop
	get /top(NodeTopRequest) returns (NodeTopResponse)
	
	// Cordon mark node as unschedulable
	@handler Cordon
	post /cordon(CordonRequest)
	
	// Uncordon mark node as schedulable
	@handler Uncordon
	post /uncordon(UncordonRequest)
	
	// Drain remove all containers in the node and mark it as unschedulable
	@handler Drain
	post /drain(DrainRequest)
	
	@handler DeleteNode
	post /delete(DeleteRequest)
	
	//本机任务，接口不对外开放
	@handler HostTop 
	get /hostTop returns (NodeTopResponse)
}

type RegisterRequest {
	Name    string   `json:"name"`
	Roles   []string `json:"roles"`
	BaseURL NodeURL  `json:"base_url"`
}

type NodeListRequest {
	All bool `form:"all, default=true"`
}

type NodeListResponse {
	NodeList []NodeList `json:"node_list"`
}

type NodeList {
	Name         string  `json:"name"`
	RegisterTime int64   `json:"register_name"`
	Status       string  `json:"status"`
	Roles        string  `json:"roles"`
	URL          NodeURL `json:"url"`
}

type NodeTopRequest {
	Name string `form:"name"`
}

type NodeTopResponse {
	Images            []string `json:"images"`
	CPUUsed           float64  `json:"cpu_used"`
	CPUFree           float64  `json:"cpu_free"`
	CPUTotal          float64  `json:"cpu_total"`
	CPUUsedPercent    float64  `json:"cpu_used_percent"`
	MemoryUsed        uint64   `json:"memory_used"`
	MemoryAvailable   uint64   `json:"memory_available"`
	MemoryUsedPercent float64  `json:"memory_used_percent"`
	MemoryTotal       uint64   `json:"memory_total"`
	DiskUsed          uint64   `json:"disk_used"`
	DiskFree          uint64   `json:"disk_free"`
	DiskUsedPercent   float64  `json:"disk_used_percent"`
	DiskTotal         uint64   `json:"disk_total"`
}

type CordonRequest {
	Name string `json:"name"`
}

type UncordonRequest {
	Name string `json:"name"`
}

type DrainRequest {
	Name string `json:"name"`
}

type DeleteRequest {
	Name string `json:"name"`
}

//>>>>>>>>>>>>>>>>>>>>>>在线调度算法专用<<<<<<<<<<<<<<<<<<<<<<<
type ScheduleRequest {
	Name  string  `json:"name"`
	Ports []int64 `json:"posts"`
}

type ScheduleResponse {
	Images            []string `json:"images"`
	MemoryUsed        uint64   `json:"memory_used"`
	MemoryAvailable   uint64   `json:"memory_available"`
	MemoryUsedPercent float64  `json:"memory_used_percent"`
	MemoryTotal       uint64   `json:"memory_total"`
	PortUsable        bool     `json:"port_usable"`
}