type Metadata {
	Namespace string `json:"namespace"`
	Kind      string `json:"kind"`
	Name      string `json:"name"`
}

type Error {
	Todo string `json:"todo"`
}

//>>>>>>>>>>>>>>>>>>>>>>>>>>> Container <<<<<<<<<<<<<<<<<<<<<<<<<<
type Container {
	Metadata        Metadata        `json:"metadata"`
	ContainerConfig ContainerConfig `json:"container_config"`
	ContainerStatus ContainerStatus `json:"container_status,optional"`
}

type ContainerConfig {
	Image    string         `json:"image"`
	NodeName string         `json:"node_name,optional"`
	Command  string         `json:"command,optional"`
	Args     []string       `json:"args,optional"`
	Expose   []ExposedPort  `json:"expose,optional"`
	Env      []string       `json:"env,optional"`
	Limit    ContainerLimit `json:"limit,optional"`
}

type ContainerLimit {
	// 默认 5% CPU 时间，单位为 纳秒
	CPU int64 `json:"cpu,default=50000000"`
	// 默认 100 MB，单位为 B
	Memory int64 `json:"memory,default=104857600"`
}

type ExposedPort {
	Port     int64  `json:"port"`
	Protocol string `json:"protocol"`
	HostPort int64  `json:"host_port"`
}

type ContainerStatus {
	Status      string      `json:"status"`
	Node        string      `json:"node"`
	ContainerID string      `json:"container_id"`
	Info        interface{} `json:"info"`
}

//>>>>>>>>>>>>>>>>>>>>>>>>>>> Job <<<<<<<<<<<<<<<<<<<<<<<<<<
type JobConfig {
	Todo string `json:"todo"`
}

type JobStatus {
	Todo string `json:"todo"`
}

type Job {
	Metadata              Metadata `json:"metadata"`
	Node                  string   `json:"node"`
	Containers            []string `json:"containers"`
	Completions           int64    `json:"completions"`
	BackoffLimit          int64    `json:"backoff_limit"`
	ActiveDeadlineSeconds int64    `json:"active_deadline_seconds"`
	StartTime             string   `json:"start_time"`
	CompletionTime        string   `json:"completion_time"`
	Active                int64    `json:"active"`
	Failed                int64    `json:"failed"`
	Succeeded             int64    `json:"succeeded"`
	Status                string   `json:"status"`

	Template ContainerConfig `json:"template"`
}

//>>>>>>>>>>>>>>>>>>>>>>>>>>> CronJob <<<<<<<<<<<<<<<<<<<<<<<<<<
type CronJobConfig {
	Todo string `json:"todo"`
}

type CronJobStatus {
	Todo string `json:"todo"`
}

type CronJob {
	Metadata Metadata      `json:"metadata"`
	Config   CronJobConfig `json:"config"`
	Status   CronJobStatus `json:"status"`
}

//>>>>>>>>>>>>>>>>>>>>>>>>>>> Deployment <<<<<<<<<<<<<<<<<<<<<<<<<<
type DeploymentConfig {
	Todo string `json:"todo"`
}

type DeploymentStatus {
	Todo string `json:"todo"`
}

type Deployment {
	Metadata Metadata         `json:"metadata"`
	Config   DeploymentConfig `json:"config"`
	Status   DeploymentStatus `json:"status"`
}

//>>>>>>>>>>>>>>>>>>>>>>>>>>> Token <<<<<<<<<<<<<<<<<<<<<<<<<<
type TokenConfig {
	Todo string `json:"todo"`
}

type TokenStatus {
	Todo string `json:"todo"`
}

type Token {
	Metadata Metadata    `json:"metadata"`
	Config   TokenConfig `json:"config"`
	Status   TokenStatus `json:"status"`
}

//>>>>>>>>>>>>>>>>>>>>>>>>>>> Node <<<<<<<<<<<<<<<<<<<<<<<<<<
type Node {
	Metadata     Metadata `json:"metadata"`
	Roles        []string `json:"roles"`
	BaseURL      NodeURL  `json:"base_url"`
	Spec         Spec     `json:"spec"`
	RegisterTime int64    `json:"register_time"`
	Status       Status   `json:"status"`
}

type NodeURL {
	WorkerURL string `json:"worker_url"`
	MasterURL string `json:"master_url"`
}

type Spec {
	Unschedulable bool `json:"unschedulable"`
}

type Status {
	Working     bool        `json:"working"`
	Capacity    Capacity    `json:"capacity"`
	Allocatable Allocatable `json:"allocatable"`
	Condition   Condition   `json:"condition"`
}

type Capacity {
	CPU    float64 `json:"cpu"`
	Memory float64 `json:"memory"`
}

type Allocatable {
	CPU    float64 `json:"cpu"`
	Memory float64 `json:"memory"`
}

type Condition {
	Ready ConditionInfo `json:"ready"`
}

type ConditionInfo {
	Status            bool   `json:"status"`
	LastHeartbeatTime string `json:"LastHeartbeatTime"`
}

//>>>>>>>>>>>>>>>>>>>>>>>>>>> Other <<<<<<<<<<<<<<<<<<<<<<<<<<
type Command {
	Todo string `json:"todo"`
}

type Namespace {
	Kind       string `json:"kind"`
	Name       string `json:"name"`
	Status     string `json:"status"`
	CreateTime int64  `json:"create_time"`
}