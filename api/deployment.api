import (
	"global.api"
)

@server (
	prefix: /deployment
)
service master-api {
	@handler CreateDeployment
	post /create(CreateDeploymentRequest) returns (CreateDeploymentResponse)
	
	@handler GetDeployment
	get /get(GetDeploymentRequest) returns (GetDeploymentResponse)
	
	@handler ListDeployment
	get /list(ListDeploymentRequest) returns (ListDeploymentResponse)
	
	@handler DeleteDeployment
	post /delete(DeleteDeploymentRequest)
	
	@handler ApplyDeployment
	post /apply(ApplyDeploymentRequest) returns (ApplyDeploymentResponse)
	
	@handler Scale
	post /scale(ScaleRequest)
}

type CreateDeploymentRequest {
	Deployment Deployment `json:"deployment" yaml:"deployment"`
}

type CreateDeploymentResponse {
	Err []string `json:"err"`
}

type GetDeploymentRequest {
	Namespace string `form:"namespace"`
	Name      string `form:"name"`
}

type GetDeploymentResponse {
	Deployment Deployment `json:"deployment"`
}

type ListDeploymentRequest {
	Namespace string `form:"namespace,optional"`
}

type ListDeploymentResponse {
	Info []DeploymentSimpleInfo `json:"info"`
}

type DeploymentSimpleInfo {
	Namespace  string `json:"namespace"`
	Name       string `json:"name"`
	CreateTime int64  `json:"create_time"`
	Replicas   int    `json:"replicas"`
	Available  int    `json:"available"`
}

type DeleteDeploymentRequest {
	Namespace      string `json:"namespace"`
	Name           string `json:"name"`
	RemoveVolumnes bool   `json:"remove_volumns,optional"`
	RemoveLinks    bool   `json:"remoce_links,optional"`
	Force          bool   `json:"force,optional"`
	Timeout        int    `json:"timeout,optional"`
}

type DeleteDeploymentResponse {
	Err []string `json:"err"`
}

type ApplyDeploymentRequest {
	Namespace string           `json:"namespace"`
	Name      string           `json:"name"`
	Config    DeploymentConfig `json:"config" yaml:"config"`
}

type ApplyDeploymentResponse {
	Err []string `json:"err"`
}

type ScaleRequest {
	Namespace string `json:"namespace"`
	Name      string `json:"name"`
	Replicas  int    `json:"replicas"`
}