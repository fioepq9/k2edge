/*
 * 
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type ContainerConfig struct {
	//  Hostname
	Hostname string `json:"hostname,omitempty"`
	//  Domainname
	Domainname string `json:"domainname,omitempty"`
	//  User that will run the command(s) inside the container, also support user:group
	User string `json:"user,omitempty"`
	//  Attach the standard input, makes possible user interaction
	AttachStdin bool `json:"attach_stdin,omitempty"`
	//  Attach the standard output
	AttachStdout bool `json:"attach_stdout,omitempty"`
	//  Attach the standard error
	AttachStderr bool `json:"attach_stderr,omitempty"`
	//  List of exposed ports
	ExposedPorts []string `json:"exposed_ports,omitempty"`
	//  Attach standard streams to a tty, including stdin if it is not closed.
	Tty bool `json:"tty,omitempty"`
	//  Open stdin
	OpenStdin bool `json:"open_stdin,omitempty"`
	//  If true, close stdin after the 1 attached client disconnects.
	StdinOnce bool `json:"stdin_once,omitempty"`
	//  List of environment variable to set in the container
	Env []string `json:"env,omitempty"`
	//  Command to run when starting the container
	Cmd []string `json:"cmd,omitempty"`
	//  Healthcheck describes how to check the container is healthy
	Healthcheck *HealthConfig `json:"healthcheck,omitempty"`
	//  True if command is already escaped (meaning treat as a command line) (Windows specific).
	ArgsEscaped bool `json:"args_escaped,omitempty"`
	//  Name of the image as it was passed by the operator (e.g. could be symbolic)
	Image string `json:"image"`
	//  List of volumes (mounts) used for the container
	Volumes []string `json:"volumes,omitempty"`
	//  Current directory (PWD) in the command will be launched
	WorkingDir string `json:"working_dir,omitempty"`
	//  Entrypoint to run when starting the container
	Entrypoint []string `json:"entrypoint,omitempty"`
	//  Is network disabled
	NetworkDisabled bool `json:"network_disabled,omitempty"`
	//  Mac Address of the container
	MacAddress string `json:"mac_address,omitempty"`
	//  ONBUILD metadata that were defined on the image Dockerfile
	OnBuild []string `json:"on_build,omitempty"`
	//  List of labels set to this container
	Labels interface{} `json:"labels,omitempty"`
	//  Signal to stop a container
	StopSignal string `json:"stop_signal,omitempty"`
	//  Timeout (in seconds) to stop a container
	StopTimeout int32 `json:"stop_timeout,omitempty"`
	//  Shell for shell-form of RUN, CMD, ENTRYPOINT
	Shell []string `json:"shell,omitempty"`
}
