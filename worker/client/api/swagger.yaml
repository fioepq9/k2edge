---
swagger: "2.0"
info:
  description: "worker api"
  version: ""
  title: "worker api"
host: "127.0.0.1:8888"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- apiKey: []
paths:
  /container/attach:
    post:
      tags:
      - "worker-api"
      summary: "prepares a streaming endpoint to attach to a running container"
      operationId: "Attach"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AttachRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/AttachResponse"
  /container/exec:
    post:
      tags:
      - "worker-api"
      summary: "runs a command in a container."
      operationId: "Exec"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ExecRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/ExecResponse"
  /container/list:
    get:
      tags:
      - "worker-api"
      summary: "a list of containers"
      operationId: "ListContainers"
      parameters:
      - name: "size"
        in: "query"
        required: false
        type: "boolean"
        format: "boolean"
        x-exportParamName: "Size"
        x-optionalDataType: "Bool"
      - name: "all"
        in: "query"
        required: false
        type: "boolean"
        format: "boolean"
        x-exportParamName: "All"
        x-optionalDataType: "Bool"
      - name: "latest"
        in: "query"
        required: false
        type: "boolean"
        format: "boolean"
        x-exportParamName: "Latest"
        x-optionalDataType: "Bool"
      - name: "since"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Since"
        x-optionalDataType: "String"
      - name: "before"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Before"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/ListContainersResponse"
  /container/remove:
    post:
      tags:
      - "worker-api"
      summary: "removes the container"
      operationId: "RemoveContainer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RemoveContainerRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/RemoveContainerResponse"
  /container/run:
    post:
      tags:
      - "worker-api"
      summary: "creates and starts a container"
      operationId: "RunContainer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RunContainerRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/RunContainerResponse"
  /container/start:
    post:
      tags:
      - "worker-api"
      summary: "starts the container"
      operationId: "StartContainer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/StartContainerRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/StartContainerResponse"
  /container/status:
    get:
      tags:
      - "worker-api"
      summary: "the status of the container"
      operationId: "ContainerStatus"
      parameters:
      - name: "selector"
        in: "query"
        required: true
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/ContainerStatusResponse"
  /container/stop:
    post:
      tags:
      - "worker-api"
      summary: "stops any running process that is part of the container"
      operationId: "StopContainer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/StopContainerRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/StopContainerResponse"
  /version:
    get:
      tags:
      - "worker-api"
      summary: "the version of api"
      operationId: "Version"
      parameters: []
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/VersionResponse"
securityDefinitions:
  apiKey:
    description: "Enter JWT Bearer token **_only_**"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  AttachRequest:
    type: "object"
    required:
    - "selector"
    properties:
      selector:
        $ref: "#/definitions/Metadata"
    title: "AttachRequest"
    example:
      selector:
        kind: "kind"
        namespace: "namespace"
        name: "name"
  AttachResponse:
    type: "object"
    required:
    - "error"
    properties:
      error:
        $ref: "#/definitions/Error"
    title: "AttachResponse"
    example:
      error:
        todo: "todo"
  Command:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "Command"
    example:
      todo: "todo"
  Container:
    type: "object"
    required:
    - "config"
    - "metadata"
    - "status"
    properties:
      metadata:
        $ref: "#/definitions/Metadata"
      config:
        $ref: "#/definitions/ContainerConfig"
      status:
        $ref: "#/definitions/ContainerStatus"
    title: "Container"
    example:
      metadata:
        kind: "kind"
        namespace: "namespace"
        name: "name"
      config:
        todo: "todo"
      status:
        todo: "todo"
  ContainerConfig:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "ContainerConfig"
    example:
      todo: "todo"
  ContainerStatus:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "ContainerStatus"
    example:
      todo: "todo"
  ContainerStatusRequest:
    type: "object"
    required:
    - "selector"
    properties:
      selector:
        $ref: "#/definitions/Metadata"
    title: "ContainerStatusRequest"
  ContainerStatusResponse:
    type: "object"
    required:
    - "container"
    properties:
      container:
        $ref: "#/definitions/Container"
    title: "ContainerStatusResponse"
    example:
      container:
        metadata:
          kind: "kind"
          namespace: "namespace"
          name: "name"
        config:
          todo: "todo"
        status:
          todo: "todo"
  CronJob:
    type: "object"
    required:
    - "config"
    - "metadata"
    - "status"
    properties:
      metadata:
        $ref: "#/definitions/Metadata"
      config:
        $ref: "#/definitions/CronJobConfig"
      status:
        $ref: "#/definitions/CronJobStatus"
    title: "CronJob"
  CronJobConfig:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "CronJobConfig"
  CronJobStatus:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "CronJobStatus"
  Deployment:
    type: "object"
    required:
    - "config"
    - "metadata"
    - "status"
    properties:
      metadata:
        $ref: "#/definitions/Metadata"
      config:
        $ref: "#/definitions/DeploymentConfig"
      status:
        $ref: "#/definitions/DeploymentStatus"
    title: "Deployment"
  DeploymentConfig:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "DeploymentConfig"
  DeploymentStatus:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "DeploymentStatus"
  Error:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "Error"
    example:
      todo: "todo"
  ExecRequest:
    type: "object"
    required:
    - "command"
    - "selector"
    properties:
      selector:
        $ref: "#/definitions/Metadata"
      command:
        $ref: "#/definitions/Command"
    title: "ExecRequest"
    example:
      selector:
        kind: "kind"
        namespace: "namespace"
        name: "name"
      command:
        todo: "todo"
  ExecResponse:
    type: "object"
    required:
    - "error"
    properties:
      error:
        $ref: "#/definitions/Error"
    title: "ExecResponse"
    example:
      error:
        todo: "todo"
  Job:
    type: "object"
    required:
    - "config"
    - "metadata"
    - "status"
    properties:
      metadata:
        $ref: "#/definitions/Metadata"
      config:
        $ref: "#/definitions/JobConfig"
      status:
        $ref: "#/definitions/JobStatus"
    title: "Job"
  JobConfig:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "JobConfig"
  JobStatus:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "JobStatus"
  ListContainersRequest:
    type: "object"
    properties:
      size:
        type: "boolean"
        format: "boolean"
      all:
        type: "boolean"
        format: "boolean"
      latest:
        type: "boolean"
        format: "boolean"
      since:
        type: "string"
      before:
        type: "string"
      limit:
        type: "integer"
        format: "int32"
    title: "ListContainersRequest"
  ListContainersResponse:
    type: "object"
    required:
    - "containers"
    properties:
      containers:
        type: "object"
        properties: {}
    title: "ListContainersResponse"
    example:
      containers: "{}"
  Metadata:
    type: "object"
    required:
    - "kind"
    - "name"
    - "namespace"
    properties:
      namespace:
        type: "string"
      kind:
        type: "string"
      name:
        type: "string"
    title: "Metadata"
    example:
      kind: "kind"
      namespace: "namespace"
      name: "name"
  Namespace:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    title: "Namespace"
  RemoveContainerRequest:
    type: "object"
    required:
    - "selector"
    properties:
      selector:
        $ref: "#/definitions/Metadata"
    title: "RemoveContainerRequest"
    example:
      selector:
        kind: "kind"
        namespace: "namespace"
        name: "name"
  RemoveContainerResponse:
    type: "object"
    required:
    - "error"
    properties:
      error:
        $ref: "#/definitions/Error"
    title: "RemoveContainerResponse"
    example:
      error:
        todo: "todo"
  RunContainerRequest:
    type: "object"
    required:
    - "config"
    properties:
      config:
        $ref: "#/definitions/ContainerConfig"
    title: "RunContainerRequest"
    example:
      config:
        todo: "todo"
  RunContainerResponse:
    type: "object"
    required:
    - "error"
    properties:
      error:
        $ref: "#/definitions/Error"
    title: "RunContainerResponse"
    example:
      error:
        todo: "todo"
  StartContainerRequest:
    type: "object"
    required:
    - "selector"
    properties:
      selector:
        $ref: "#/definitions/Metadata"
    title: "StartContainerRequest"
    example:
      selector:
        kind: "kind"
        namespace: "namespace"
        name: "name"
  StartContainerResponse:
    type: "object"
    required:
    - "error"
    properties:
      error:
        $ref: "#/definitions/Error"
    title: "StartContainerResponse"
    example:
      error:
        todo: "todo"
  StopContainerRequest:
    type: "object"
    required:
    - "selector"
    properties:
      selector:
        $ref: "#/definitions/Metadata"
    title: "StopContainerRequest"
    example:
      selector:
        kind: "kind"
        namespace: "namespace"
        name: "name"
  StopContainerResponse:
    type: "object"
    required:
    - "error"
    properties:
      error:
        $ref: "#/definitions/Error"
    title: "StopContainerResponse"
    example:
      error:
        todo: "todo"
  Token:
    type: "object"
    required:
    - "config"
    - "metadata"
    - "status"
    properties:
      metadata:
        $ref: "#/definitions/Metadata"
      config:
        $ref: "#/definitions/TokenConfig"
      status:
        $ref: "#/definitions/TokenStatus"
    title: "Token"
  TokenConfig:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "TokenConfig"
  TokenStatus:
    type: "object"
    required:
    - "todo"
    properties:
      todo:
        type: "string"
    title: "TokenStatus"
  VersionResponse:
    type: "object"
    required:
    - "version"
    properties:
      version:
        type: "string"
    title: "VersionResponse"
    example:
      version: "version"
