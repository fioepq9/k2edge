{
  "swagger": "2.0",
  "info": {
    "title": "worker api",
    "description": "worker api",
    "version": ""
  },
  "host": "127.0.0.1:8888",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/container/attach": {
      "post": {
        "summary": "prepares a streaming endpoint to attach to a running container",
        "operationId": "Attach",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/container/create": {
      "post": {
        "summary": "creates and starts a container",
        "operationId": "CreateContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateContainerResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContainerRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/container/exec": {
      "post": {
        "summary": "runs a command in a container.",
        "operationId": "Exec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/container/list": {
      "get": {
        "summary": "a list of containers",
        "operationId": "ListContainers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListContainersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "latest",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/container/remove": {
      "post": {
        "summary": "removes the container",
        "operationId": "RemoveContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveContainerRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/container/start": {
      "post": {
        "summary": "starts the container",
        "operationId": "StartContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartContainerRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/container/status": {
      "get": {
        "summary": "the status of the container",
        "operationId": "ContainerStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ContainerStatusResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/container/stop": {
      "post": {
        "summary": "stops any running process that is part of the container",
        "operationId": "StopContainer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopContainerRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    },
    "/version": {
      "get": {
        "summary": "the version of api",
        "operationId": "Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          }
        },
        "requestBody": {},
        "tags": [
          "worker-api"
        ]
      }
    }
  },
  "definitions": {
    "AttachConfig": {
      "type": "object",
      "properties": {
        "stream": {
          "type": "boolean",
          "format": "boolean"
        },
        "stdin": {
          "type": "boolean",
          "format": "boolean"
        },
        "stdout": {
          "type": "boolean",
          "format": "boolean"
        },
        "stderr": {
          "type": "boolean",
          "format": "boolean"
        },
        "detach_keys": {
          "type": "string"
        },
        "logs": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "AttachConfig",
      "required": [
        "stream",
        "stdin",
        "stdout",
        "stderr",
        "detach_keys",
        "logs"
      ]
    },
    "AttachRequest": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/AttachConfig"
        }
      },
      "title": "AttachRequest",
      "required": [
        "container"
      ]
    },
    "Command": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "Command",
      "required": [
        "todo"
      ]
    },
    "Container": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "container_template": {
          "$ref": "#/definitions/ContainerConfig"
        }
      },
      "title": "Container",
      "required": [
        "metadata",
        "container_template"
      ]
    },
    "ContainerConfig": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "node": {
          "type": "string"
        },
        "command": {
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expose": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposedPort"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ContainerConfig",
      "required": [
        "image"
      ]
    },
    "ContainerStatus": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "ContainerStatus",
      "required": [
        "todo"
      ]
    },
    "ContainerStatusRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "ContainerStatusRequest",
      "required": [
        "id"
      ]
    },
    "ContainerStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "object"
        }
      },
      "title": "ContainerStatusResponse",
      "required": [
        "status"
      ]
    },
    "CreateContainerRequest": {
      "type": "object",
      "properties": {
        "container_name": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/ContainerConfig"
        }
      },
      "title": "CreateContainerRequest",
      "required": [
        "container_name",
        "config"
      ]
    },
    "CreateContainerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "CreateContainerResponse",
      "required": [
        "id"
      ]
    },
    "CronJob": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "config": {
          "$ref": "#/definitions/CronJobConfig"
        },
        "status": {
          "$ref": "#/definitions/CronJobStatus"
        }
      },
      "title": "CronJob",
      "required": [
        "metadata",
        "config",
        "status"
      ]
    },
    "CronJobConfig": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "CronJobConfig",
      "required": [
        "todo"
      ]
    },
    "CronJobStatus": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "CronJobStatus",
      "required": [
        "todo"
      ]
    },
    "Deployment": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "config": {
          "$ref": "#/definitions/DeploymentConfig"
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus"
        }
      },
      "title": "Deployment",
      "required": [
        "metadata",
        "config",
        "status"
      ]
    },
    "DeploymentConfig": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "DeploymentConfig",
      "required": [
        "todo"
      ]
    },
    "DeploymentStatus": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "DeploymentStatus",
      "required": [
        "todo"
      ]
    },
    "Error": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "Error",
      "required": [
        "todo"
      ]
    },
    "ExecConfig": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "description": " User that will run the command"
        },
        "privileged": {
          "type": "boolean",
          "format": "boolean",
          "description": " Is the container in privileged mode"
        },
        "tty": {
          "type": "boolean",
          "format": "boolean",
          "description": " Attach standard streams to a tty."
        },
        "attach_stdin": {
          "type": "boolean",
          "format": "boolean",
          "description": " Attach the standard input, makes possible user interaction"
        },
        "attach_stderr": {
          "type": "boolean",
          "format": "boolean",
          "description": " Attach the standard error"
        },
        "attach_stdout": {
          "type": "boolean",
          "format": "boolean",
          "description": " Attach the standard output"
        },
        "detach": {
          "type": "boolean",
          "format": "boolean",
          "description": " Execute in detach mode"
        },
        "detach_keys": {
          "type": "string",
          "description": " Escape keys for detach"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": " Environment variables"
        },
        "working_dir": {
          "type": "string",
          "description": " Working directory"
        },
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": " Execution commands and args"
        }
      },
      "title": "ExecConfig",
      "required": [
        "user",
        "privileged",
        "tty",
        "attach_stdin",
        "attach_stderr",
        "attach_stdout",
        "detach",
        "detach_keys",
        "env",
        "working_dir",
        "cmd"
      ]
    },
    "ExecRequest": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/ExecConfig"
        }
      },
      "title": "ExecRequest",
      "required": [
        "container"
      ]
    },
    "ExposedPort": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "type": "string"
        },
        "host_port": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ExposedPort",
      "required": [
        "port",
        "protocol",
        "host_port"
      ]
    },
    "Job": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "node": {
          "type": "string"
        },
        "containers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "completions": {
          "type": "integer",
          "format": "int64"
        },
        "backoff_limit": {
          "type": "integer",
          "format": "int64"
        },
        "active_deadline_seconds": {
          "type": "integer",
          "format": "int64"
        },
        "start_time": {
          "type": "string"
        },
        "completion_time": {
          "type": "string"
        },
        "active": {
          "type": "integer",
          "format": "int64"
        },
        "failed": {
          "type": "integer",
          "format": "int64"
        },
        "succeeded": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/ContainerConfig"
        }
      },
      "title": "Job",
      "required": [
        "metadata",
        "node",
        "containers",
        "completions",
        "backoff_limit",
        "active_deadline_seconds",
        "start_time",
        "completion_time",
        "active",
        "failed",
        "succeeded",
        "status",
        "template"
      ]
    },
    "JobConfig": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "JobConfig",
      "required": [
        "todo"
      ]
    },
    "JobStatus": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "JobStatus",
      "required": [
        "todo"
      ]
    },
    "ListContainersRequest": {
      "type": "object",
      "properties": {
        "size": {
          "type": "boolean",
          "format": "boolean"
        },
        "all": {
          "type": "boolean",
          "format": "boolean"
        },
        "latest": {
          "type": "boolean",
          "format": "boolean"
        },
        "since": {
          "type": "string"
        },
        "before": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ListContainersRequest"
    },
    "ListContainersResponse": {
      "type": "object",
      "properties": {
        "containers": {
          "type": "object"
        }
      },
      "title": "ListContainersResponse",
      "required": [
        "containers"
      ]
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Metadata",
      "required": [
        "namespace",
        "kind",
        "name"
      ]
    },
    "Namespace": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "create_time": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Namespace",
      "required": [
        "kind",
        "name",
        "status",
        "create_time"
      ]
    },
    "Node": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "base_url": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "register_time": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Node",
      "required": [
        "metadata",
        "roles",
        "base_url",
        "status",
        "register_time"
      ]
    },
    "RemoveContainerRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "remove_volumnes": {
          "type": "boolean",
          "format": "boolean"
        },
        "remove_links": {
          "type": "boolean",
          "format": "boolean"
        },
        "force": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "RemoveContainerRequest",
      "required": [
        "id",
        "force"
      ]
    },
    "StartContainerRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "checkpoint_id": {
          "type": "string"
        },
        "checkpoint_dir": {
          "type": "string"
        }
      },
      "title": "StartContainerRequest",
      "required": [
        "id"
      ]
    },
    "StopContainerRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "StopContainerRequest",
      "required": [
        "id"
      ]
    },
    "Token": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "config": {
          "$ref": "#/definitions/TokenConfig"
        },
        "status": {
          "$ref": "#/definitions/TokenStatus"
        }
      },
      "title": "Token",
      "required": [
        "metadata",
        "config",
        "status"
      ]
    },
    "TokenConfig": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "TokenConfig",
      "required": [
        "todo"
      ]
    },
    "TokenStatus": {
      "type": "object",
      "properties": {
        "todo": {
          "type": "string"
        }
      },
      "title": "TokenStatus",
      "required": [
        "todo"
      ]
    },
    "VersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "title": "VersionResponse",
      "required": [
        "version"
      ]
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "Enter JWT Bearer token **_only_**",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}
